{"ast":null,"code":"import _defineProperty from \"/Users/chaitanya/Documents/TripleR/TripleR/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/chaitanya/Documents/TripleR/TripleR/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chaitanya/Documents/TripleR/TripleR/src/components/LandingPage.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nexport default function MaterialTableDemo() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Room Id',\n      field: 'roomId'\n    }, {\n      title: 'Building',\n      field: 'buildingName'\n    }, {\n      title: 'Room Name',\n      field: 'roomName',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/chaitanya/Documents/TripleR/TripleR/src/components/LandingPage.jsx"],"names":["React","MaterialTable","MaterialTableDemo","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","state","setState","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","prevState","indexOf"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA,0BAChBF,KAAK,CAACG,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE,UAA7B;AAAyCC,MAAAA,IAAI,EAAE;AAA/C,KAHO,EAIP;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEE,MAAAA,MAAM,EAAE;AAAE,YAAI,UAAN;AAAkB,YAAI;AAAtB;AAHV,KAJO,CAD8B;AAWvCC,IAAAA,IAAI,EAAE,CACJ;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,OAA3B;AAAoCC,MAAAA,SAAS,EAAE,IAA/C;AAAqDC,MAAAA,SAAS,EAAE;AAAhE,KADI,EAEJ;AACEH,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,OAAO,EAAE,OAFX;AAGEC,MAAAA,SAAS,EAAE,IAHb;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAFI;AAXiC,GAAf,CADgB;AAAA;AAAA,QACnCC,KADmC;AAAA,QAC5BC,QAD4B;;AAuB1C,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAED,KAAK,CAACV,OAFjB;AAGE,IAAA,IAAI,EAAEU,KAAK,CAACL,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRO,MAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KACX,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIF,OAAJ,EAAa;AACXH,YAAAA,QAAQ,CAACO,SAAS,IAAI;AACpB,oBAAMb,IAAI,GAAG,CAAC,GAAGa,SAAS,CAACb,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACc,OAAL,CAAaL,OAAb,CAAD,CAAJ,GAA8BD,OAA9B;AACA,uCAAYK,SAAZ;AAAuBb,gBAAAA;AAAvB;AACD,aAJO,CAAR;AAKD;AACF,SATS,EASP,GATO,CAAV;AAUD,OAXD;AAFM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsBD","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Room Id', field: 'roomId' },\n      { title: 'Building', field: 'buildingName' },\n      { title: 'Room Name', field: 'roomName', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34,\n      },\n    ],\n  });\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n      }}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}